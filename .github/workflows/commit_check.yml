name: Check commits and update submit_log

on:
  push:
    branches:
      - main  
    paths:
      - 'code/**'  

jobs:
  check_commits:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Lấy thông tin commit và kiểm tra người commit
      - name: Get commit info and check for users
        id: get_commits
        run: |
          # Lấy ngày hôm nay theo định dạng dd-mm-yyyy
          today=$(date '+%d-%m-%Y')

          # Lấy tất cả commit trong thư mục ./code/{{today}}*
          commits=$(git log --since="midnight" --oneline "./code/${today}*")

          # Khởi tạo một mảng trống để lưu danh sách người commit
          users=()

          # Lấy username từ mỗi commit
          while IFS= read -r commit; do
            username=$(echo "$commit" | awk '{print $2}')
            if [[ ! " ${users[@]} " =~ " ${username} " ]]; then
              users+=("$username")
            fi
          done <<< "$commits"

          # Chuyển mảng người commit thành chuỗi JSON hợp lệ
          users_json=$(printf '"%s", ' "${users[@]}")
          users_json="[${users_json%, }]"

          echo "USERS_JSON=$users_json"
          # Lưu kết quả vào biến môi trường
          echo "USERS_JSON=$users_json" >> $GITHUB_ENV
          echo "DATE=$today" >> $GITHUB_ENV

      # Đảm bảo tệp submit_log.json tồn tại
      - name: Ensure the submit_log.json exists
        run: |
          # Tạo thư mục nếu chưa có
          mkdir -p docs/challenges/data

          # Kiểm tra nếu submit_log.json không tồn tại thì tạo mới với một mảng trống
          if [ ! -f docs/challenges/data/submit_log.json ]; then
            echo "[]" > docs/challenges/data/submit_log.json
          fi

      # Cập nhật submit_log.json với người commit của ngày hôm nay
      - name: Update submit_log.json with commit users
        run: |
          # Đọc nội dung của submit_log.json
          current_log=$(cat docs/challenges/data/submit_log.json)

          # Kiểm tra xem ngày hôm nay đã có trong log chưa
          existing_entry=$(echo "$current_log" | jq -r --arg date "$DATE" '.[] | select(.day == $date)')

          if [ "$existing_entry" != "null" ]; then
            # Nếu ngày hôm nay đã có trong log, thêm người commit vào danh sách hiện có
            updated_users=$(echo "$existing_entry" | jq --arg users "$USERS_JSON" '.users += ($users | fromjson) | unique')
            updated_log=$(echo "$current_log" | jq --arg date "$DATE" --argjson users "$updated_users" '. |= map(if .day == $date then .users = $users else . end)')
          else
            # Nếu ngày hôm nay chưa có trong log, tạo mới một mục log với người commit
            new_entry="{\"day\": \"$DATE\", \"users\": $USERS_JSON}"
            updated_log=$(echo "$current_log" | jq ". += [$new_entry]")
          fi

          # Lưu kết quả vào tệp submit_log.json
          echo "$updated_log" > docs/challenges/data/submit_log.json

      # Commit thay đổi vào submit_log.json
      - name: Commit changes to submit_log.json
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Đảm bảo thay đổi được thêm vào staging
          git add docs/challenges/data/submit_log.json

          # Kiểm tra xem có thay đổi nào chưa được commit không
          git status

          # Commit thay đổi nếu có
          git commit -m "Update submit_log for ${{ env.DATE }}" || echo "No changes to commit"
          
          # Đẩy thay đổi lên repository
          git push origin main
